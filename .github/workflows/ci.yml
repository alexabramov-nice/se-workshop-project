name: se-workshop pipe

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
#        node-version: [10.x, 8.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install API
        run: |
          cd se-workshop-20-interfaces
          npm install
          cd ..
      - name: Install Domain
        run: |
          cd backend
          cd domain
          npm install
          cd ..
          cd ..
      - name: Install Service
        run: |
          cd backend
          cd service
          npm install
          cd ..
          cd ..
      - name: Install AT
        run: |
          cd AT
          npm install
          cd ..
      - name: Compile API
        run: |
          cd se-workshop-20-interfaces
          npm run comp
          cd ..
      - name: Compile Domain
        run: |
          cd backend
          cd domain
          npm run comp
          cd ..
          cd ..
      - name: Compile Service
        run: |
          cd backend
          cd service
          npm run comp
          cd ..
          cd ..
      - name: Compile AT
        run: |
          cd AT
          npm run comp
          cd ..
      - name: Unit Tests
        run: |
          cd backend
          cd domain
          npm run test:cov
          cd ..
          cd ..
      - name: Integration Tests
        run: |
          cd backend
          cd service
          npm test
          cd ..
          cd ..
#      - name: Acceptance Tests
#        run: |
#          cd AT
#          npm test
#          cd ..
#      - uses: devmasx/coverage-check-action@v1.1.0
#        with:
#          type: simplecov
#          result_path: backend/domain/coverage/coverage-final.json
#          min_coverage: 90
#          token: ${{secrets.TOKEN}}

      - name: Coverage monitor
        uses: slavcodev/coverage-monitor-action@1.1.0
        with:
          # The GITHUB_TOKEN secret.
          github_token: ${{secrets.TOKEN}}
          # Path to Clover XML file.
          clover_file: backend/domain/coverage/dlover.xml
          # Whether check the coverage thresholds.
          check: true
          # Whether comment the coverage report.
          comment: true
          # Mark the build as unstable when coverage is less than this threshold.
          threshold_alert: 50
          # Warning when coverage is less than this threshold.
          threshold_warning: 60
          # A string label to differentiate this status from the status of other systems.
          status_context: Coverage Report
          # A string label to differentiate the comment posted by this action.
          comment_context: Coverage Report
          # A mode for comments, supported: `replace`, `update` or `insert`.
          comment_mode: replace
